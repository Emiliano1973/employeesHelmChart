namespace: employees-namespace
roleName: pod-reader
roleBindingName: pod-reader-binding
serviceAccount:
  create: true  # Imposta su true per creare la ServiceAccount, false se ne usi una esistente
  name: ""      # Nome della ServiceAccount, lascia vuoto per usare il nome generato automaticamente

database:
  url: "jdbc:mysql://host.docker.internal:3306/employees"
  username: "root"           # Nome utente del database
  password: "root"        # Password del database

databaseUsers:
  url: "jdbc:mysql://host.docker.internal:3306/users"
  username: "root"           # Nome utente del database
  password: "root"        # Password del database


backend:
  image: "employees-app:latest"
  replicas: 2
  containerPort: 8080

backendUser:
  image: "users-service:latest"
  replicas: 2
  containerPort: 9191


frontend:
  image: "employees-frontend:latest"
  replicas: 1
  containerPort: 80

redis:
  image: "redis:latest"
  containerPort: 6379
  host: "{{ .Release.Name }}-redis.employees-namespace.svc.cluster.local"
  allowEmptyPassword: "yes"
  databases: "16"
  tlsEnabled: true

ingress:
  hosts:
    - host: "my-app.local"
      paths:
        - path: /
        - path: /api

autoscaling:
  enabled: false